name: Deploy Environment

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
env:
  aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
  aws_region: ${{ vars.AWS_REGION }}
  aws_role: ${{ vars.AWS_ROLE }}

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform Checks
        uses: ./.github/actions/terraform_check
        with:
          aws_account_id: ${{ env.aws_account_id }}
          aws_region: ${{ env.aws_region }}
          aws_role: ${{ env.aws_role }}

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-check
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform Apply
        uses: ./.github/actions/terraform_action
        with:
          aws_account_id: ${{ env.aws_account_id }}
          aws_region: ${{ env.aws_region }}
          aws_role: ${{ env.aws_role }}
          terraform_action: apply
          stage: ${{ inputs.stage }}
  
  terraform-destroy:
    runs-on: ubuntu-latest
    needs: terraform-apply
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Terraform Destroy
        uses: ./.github/actions/terraform_action
        with:
          aws_account_id: ${{ env.aws_account_id }}
          aws_region: ${{ env.aws_region }}
          aws_role: ${{ env.aws_role }}
          terraform_action: destroy
          stage: ${{ inputs.stage }}